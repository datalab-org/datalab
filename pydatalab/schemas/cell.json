{
  "title": "Cell",
  "description": "A model for representing electrochemical cells.",
  "type": "object",
  "properties": {
    "blocks_obj": {
      "title": "Blocks Obj",
      "default": {},
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/DataBlockResponse"
      }
    },
    "display_order": {
      "title": "Display Order",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "collections": {
      "title": "Collections",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Collection"
      }
    },
    "revision": {
      "title": "Revision",
      "default": 1,
      "type": "integer"
    },
    "revisions": {
      "title": "Revisions",
      "type": "object"
    },
    "creator_ids": {
      "title": "Creator Ids",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "creators": {
      "title": "Creators",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Person"
      }
    },
    "type": {
      "title": "Type",
      "default": "cells",
      "const": "cells",
      "pattern": "^cells$",
      "type": "string"
    },
    "immutable_id": {
      "title": "Immutable ID",
      "format": "uuid",
      "type": "string"
    },
    "last_modified": {
      "title": "Last Modified",
      "type": "string",
      "format": "date-time"
    },
    "relationships": {
      "title": "Relationships",
      "type": "array",
      "items": {
        "$ref": "#/definitions/TypedRelationship"
      }
    },
    "refcode": {
      "title": "Refcode",
      "minLength": 1,
      "maxLength": 40,
      "pattern": "^[a-z]{2,10}:(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
      "type": "string"
    },
    "item_id": {
      "title": "Item Id",
      "minLength": 1,
      "maxLength": 40,
      "pattern": "^(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
      "type": "string"
    },
    "description": {
      "title": "Description",
      "type": "string"
    },
    "date": {
      "title": "Date",
      "type": "string",
      "format": "date-time"
    },
    "name": {
      "title": "Name",
      "type": "string"
    },
    "files": {
      "title": "Files",
      "type": "array",
      "items": {
        "$ref": "#/definitions/File"
      }
    },
    "file_ObjectIds": {
      "title": "File Objectids",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cell_format": {
      "$ref": "#/definitions/CellFormat"
    },
    "cell_format_description": {
      "title": "Cell Format Description",
      "type": "string"
    },
    "cell_preparation_description": {
      "title": "Cell Preparation Description",
      "type": "string"
    },
    "characteristic_mass": {
      "title": "Characteristic Mass",
      "type": "number"
    },
    "characteristic_chemical_formula": {
      "title": "Characteristic Chemical Formula",
      "type": "string"
    },
    "characteristic_molar_mass": {
      "title": "Characteristic Molar Mass",
      "type": "number"
    },
    "positive_electrode": {
      "title": "Positive Electrode",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/CellComponent"
      }
    },
    "negative_electrode": {
      "title": "Negative Electrode",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/CellComponent"
      }
    },
    "electrolyte": {
      "title": "Electrolyte",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/CellComponent"
      }
    },
    "active_ion_charge": {
      "title": "Active Ion Charge",
      "default": 1,
      "type": "number"
    }
  },
  "required": [
    "item_id"
  ],
  "definitions": {
    "DataBlockResponse": {
      "title": "DataBlockResponse",
      "description": "A generic response model for a block, i.e., what is stored in `self.data`\nin the corresponding DataBlock class.",
      "type": "object",
      "properties": {
        "blocktype": {
          "title": "Blocktype",
          "type": "string"
        },
        "block_id": {
          "title": "Block Id",
          "type": "string"
        },
        "item_id": {
          "title": "Item Id",
          "type": "string"
        },
        "collection_id": {
          "title": "Collection Id",
          "type": "string"
        },
        "title": {
          "title": "Title",
          "type": "string"
        },
        "freeform_comment": {
          "title": "Freeform Comment",
          "type": "string"
        },
        "file_id": {
          "title": "File Id",
          "type": "string"
        },
        "file_ids": {
          "title": "File Ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "b64_encoded_image": {
          "title": "B64 Encoded Image",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "bokeh_plot_data": {
          "title": "Bokeh Plot Data",
          "type": "string"
        }
      },
      "required": [
        "blocktype",
        "block_id"
      ]
    },
    "RelationshipType": {
      "title": "RelationshipType",
      "description": "An enumeration of the possible types of relationship between two entries.\n\n```mermaid\nclassDiagram\nclass entryC\nentryC --|> entryA: parent\nentryC ..|> entryD\nentryA <..> entryD: sibling\nentryA --|> entryB : child\n```",
      "enum": [
        "parent",
        "child",
        "sibling",
        "is_part_of",
        "other"
      ],
      "type": "string"
    },
    "KnownType": {
      "title": "KnownType",
      "description": "An enumeration of the types of entry known by this implementation, should be made dynamic in the future.",
      "enum": [
        "samples",
        "starting_materials",
        "blocks",
        "files",
        "people",
        "collections"
      ],
      "type": "string"
    },
    "TypedRelationship": {
      "title": "TypedRelationship",
      "type": "object",
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "relation": {
          "$ref": "#/definitions/RelationshipType"
        },
        "type": {
          "$ref": "#/definitions/KnownType"
        },
        "immutable_id": {
          "title": "Immutable Id",
          "type": "string"
        },
        "item_id": {
          "title": "Item Id",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
          "type": "string"
        },
        "refcode": {
          "title": "Refcode",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-z]{2,10}:(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "IdentityType": {
      "title": "IdentityType",
      "description": "A string enum representing the supported verifiable identity types.",
      "enum": [
        "email",
        "orcid",
        "github"
      ],
      "type": "string"
    },
    "Identity": {
      "title": "Identity",
      "description": "A model for identities that can be provided by external systems\nand associated with a given user.",
      "type": "object",
      "properties": {
        "identity_type": {
          "$ref": "#/definitions/IdentityType"
        },
        "identifier": {
          "title": "Identifier",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "verified": {
          "title": "Verified",
          "default": false,
          "type": "boolean"
        },
        "display_name": {
          "title": "Display Name",
          "type": "string"
        }
      },
      "required": [
        "identity_type",
        "identifier",
        "name"
      ]
    },
    "AccountStatus": {
      "title": "AccountStatus",
      "description": "A string enum representing the account status.",
      "enum": [
        "active",
        "unverified",
        "deactivated"
      ],
      "type": "string"
    },
    "Person": {
      "title": "Person",
      "description": "A model that describes an individual and their digital identities.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "default": "people",
          "const": "people",
          "type": "string"
        },
        "immutable_id": {
          "title": "Immutable ID",
          "format": "uuid",
          "type": "string"
        },
        "last_modified": {
          "title": "Last Modified",
          "type": "string",
          "format": "date-time"
        },
        "relationships": {
          "title": "Relationships",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypedRelationship"
          }
        },
        "identities": {
          "title": "Identities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identity"
          }
        },
        "display_name": {
          "title": "Display Name",
          "minLength": 1,
          "maxLength": 150,
          "type": "string"
        },
        "contact_email": {
          "title": "Contact Email",
          "type": "string",
          "format": "email"
        },
        "managers": {
          "title": "Managers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "account_status": {
          "default": "unverified",
          "allOf": [
            {
              "$ref": "#/definitions/AccountStatus"
            }
          ]
        }
      }
    },
    "Collection": {
      "title": "Collection",
      "description": "An Entry is an abstract base class for any model that can be\ndeserialized and stored in the database.",
      "type": "object",
      "properties": {
        "blocks_obj": {
          "title": "Blocks Obj",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataBlockResponse"
          }
        },
        "display_order": {
          "title": "Display Order",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creator_ids": {
          "title": "Creator Ids",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creators": {
          "title": "Creators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "type": {
          "title": "Type",
          "default": "collections",
          "const": "collections",
          "pattern": "^collections$",
          "type": "string"
        },
        "immutable_id": {
          "title": "Immutable ID",
          "format": "uuid",
          "type": "string"
        },
        "last_modified": {
          "title": "Last Modified",
          "type": "string",
          "format": "date-time"
        },
        "relationships": {
          "title": "Relationships",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypedRelationship"
          }
        },
        "collection_id": {
          "title": "Collection Id",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
          "type": "string"
        },
        "title": {
          "title": "Title",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "num_items": {
          "title": "Num Items",
          "type": "integer"
        }
      }
    },
    "File": {
      "title": "File",
      "description": "A model for representing a file that has been tracked or uploaded to datalab.",
      "type": "object",
      "properties": {
        "revision": {
          "title": "Revision",
          "default": 1,
          "type": "integer"
        },
        "revisions": {
          "title": "Revisions",
          "type": "object"
        },
        "creator_ids": {
          "title": "Creator Ids",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creators": {
          "title": "Creators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "type": {
          "title": "Type",
          "default": "files",
          "const": "files",
          "pattern": "^files$",
          "type": "string"
        },
        "immutable_id": {
          "title": "Immutable ID",
          "format": "uuid",
          "type": "string"
        },
        "last_modified": {
          "title": "Last Modified",
          "type": "string",
          "format": "date-time"
        },
        "relationships": {
          "title": "Relationships",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypedRelationship"
          }
        },
        "size": {
          "title": "Size",
          "type": "integer"
        },
        "last_modified_remote": {
          "title": "Last Modified Remote",
          "type": "string",
          "format": "date-time"
        },
        "item_ids": {
          "title": "Item Ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blocks": {
          "title": "Blocks",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "extension": {
          "title": "Extension",
          "type": "string"
        },
        "original_name": {
          "title": "Original Name",
          "type": "string"
        },
        "location": {
          "title": "Location",
          "type": "string"
        },
        "url_path": {
          "title": "Url Path",
          "type": "string"
        },
        "source": {
          "title": "Source",
          "type": "string"
        },
        "time_added": {
          "title": "Time Added",
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "title": "Metadata",
          "type": "object"
        },
        "representation": {
          "title": "Representation"
        },
        "source_server_name": {
          "title": "Source Server Name",
          "type": "string"
        },
        "source_path": {
          "title": "Source Path",
          "type": "string"
        },
        "is_live": {
          "title": "Is Live",
          "type": "boolean"
        }
      },
      "required": [
        "item_ids",
        "blocks",
        "name",
        "extension",
        "time_added",
        "is_live"
      ]
    },
    "CellFormat": {
      "title": "CellFormat",
      "description": "An enumeration.",
      "enum": [
        "coin",
        "pouch",
        "in situ (XRD)",
        "in situ (NMR)",
        "in situ (SQUID)",
        "in situ (optical)",
        "swagelok",
        "cylindrical",
        "other"
      ],
      "type": "string"
    },
    "EntryReference": {
      "title": "EntryReference",
      "description": "A reference to a database entry by ID and type.\n\nCan include additional arbitarary metadata useful for\ninlining the item data.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "immutable_id": {
          "title": "Immutable Id",
          "type": "string"
        },
        "item_id": {
          "title": "Item Id",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
          "type": "string"
        },
        "refcode": {
          "title": "Refcode",
          "minLength": 1,
          "maxLength": 40,
          "pattern": "^[a-z]{2,10}:(?:[a-zA-Z0-9]+|[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9])$",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "InlineSubstance": {
      "title": "InlineSubstance",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "chemform": {
          "title": "Chemform",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CellComponent": {
      "title": "CellComponent",
      "description": "A constituent of a sample.",
      "type": "object",
      "properties": {
        "item": {
          "title": "Item",
          "anyOf": [
            {
              "$ref": "#/definitions/EntryReference"
            },
            {
              "$ref": "#/definitions/InlineSubstance"
            }
          ]
        },
        "quantity": {
          "title": "Quantity",
          "minimum": 0,
          "type": "number"
        },
        "unit": {
          "title": "Unit",
          "default": "g",
          "type": "string"
        }
      },
      "required": [
        "item",
        "quantity"
      ]
    }
  }
}