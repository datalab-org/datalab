[project]
name = "datalab-server"
readme = "README.md"
keywords = []
license = { text = "MIT" }
authors = [{ name = "Matthew Evans", email = "matthew@ml-evs.science" }, { name = "Joshua Bocarsly" }]
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]

requires-python = ">=3.10"

dependencies = [
    # Slightly confusing, but git dependencies cannot be included as extra by uv at the moment
    "navani @ git+https://github.com/the-grey-group/navani.git@v0.1.5",
]

[project.urls]
homepage = "https://github.com/the-grey-group/datalab"
repository = "https://github.com/the-grey-group/datalab"
documentation = "https://the-datalab.readthedocs.io"
changelog = "https://github.com/the-grey-group/datalab/releases"

[build-system]
requires = ["setuptools >= 62", "setuptools_scm ~= 8.1", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["pydatalab"]
include = ["pydatalab"]
namespaces = false

[tool.setuptools_scm]
root = ".."
fallback_version = "0.1.0"

[project.optional-dependencies]
dev = [
    "pytest ~= 8.2",
    "pytest-cov ~= 5.0",
    "pytest-dependency ~= 0.6",
    "pre-commit ~= 3.7",
    "mongomock ~= 4.1",
    "mkdocs ~= 1.6",
    "mkdocs-material ~= 9.5",
    "mkdocstrings[python-legacy] ~= 0.25",
    "mkdocs-awesome-pages-plugin ~= 2.9"
]

server = [
    "pydantic[email, dotenv] < 2.0",
    "pymongo ~= 4.7",
    "bokeh ~= 2.4, < 3.0",
    "Flask ~= 3.0",
    "Flask-Login ~= 0.6",
    "Flask-Cors ~= 4.0",
    "Flask-Dance ~= 7.1",
    "Flask-PyMongo ~= 2.3",
    "Flask-Mail ~= 0.10",
    "Flask-Compress ~= 1.15",
    "Werkzeug ~= 3.0",
    "pandas[excel] ~= 2.2",
    "matplotlib ~= 3.8",
    "python-dotenv ~= 1.0",
    "pint ~= 0.24",
    "periodictable ~= 1.7",
    "pillow ~= 10.4",
    "pyjwt ~= 2.9",
    "invoke ~= 2.2",
    "paramiko ~= 3.4",
]

apps = [
    # General
    "scipy ~= 1.13",
    # NMR
    "nmrglue ~= 0.10",
    # Electrochemistry
    "galvani ~= 0.4, < 0.5",
    "NewareNDA >= 2024",
    # Raman
    "pybaselines ~= 1.1",
    "rosettasciio ~= 0.3, < 0.4",
    # TGA
    "python-dateutil ~= 2.9",
]

chat = [
    "langchain == 0.2.6",
    "langchain-openai ~= 0.1",
    "langchain-anthropic ~= 0.1",
    "tiktoken ~= 0.7",
    "transformers ~= 4.42"
]


all = ["datalab-server[apps,server,chat]"]

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = true
follow_imports = "skip"
strict_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = false
no_implicit_reexport = true
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = ["ALL"]
ignore = [
    "ANN",     # TODO fix all ANN errors
    "ARG",     # TODO fix unused method argument
    "BLE001",
    "C408",    # Unnecessary (dict/list/tuple) call - remove call
    "C901",    # function too complex
    "COM812",  # trailing comma missing
    "D",
    "D205",
    "DTZ",     # datetime-tz-now
    "E501",    # TODO fix line too long
    "EM",      # exception message must not use f-string literal
    "ERA001",  # found commented out code
    "FA100",   # TODO fix FA errors
    "FBT001",
    "FBT002",
    "FIX002",
    "G004",    # logging uses fstring
    "ISC001",
    "N802",    # TODO maybe fix these
    "PD011",   # pandas-use-of-dot-values
    "PERF203", # try-except-in-loop
    "PGH003",
    "PLR0911", # too many returns
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "PT004",   # pytest-missing-fixture-name-underscore
    "PT006",   # pytest-parametrize-names-wrong-type
    "PT013",   # pytest-incorrect-pytest-import
    "PTH",     # prefer Pathlib to os.path
    "RUF013",  # implicit-optional
    "S106",
    "S110",
    "S311",
    "S324",    # use of insecure hash function
    "S507",    # paramiko auto trust
    "S602",
    "SIM105",  # contextlib.suppress(Exception) instead of try-except
    "SLF",     # private member accessed outside class
    "T201",    # print statement
    "TD",      # TODOs
    "TRY003",  # long message outside exception class
]
pydocstyle.convention = "numpy"
isort.known-first-party = ["jobflow_remote"]
isort.split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"**/tests/*" = ["INP001", "S101"]

[tool.ruff.format]
docstring-code-format = true
