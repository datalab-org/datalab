# Lifted from https://github.com/Materials-Consortia/optimade-python-tools/blob/master/.github/workflows/ci_automerge_dependabot.yml
# This enables a workflow where all incoming dependabot PRs are auto-merged into a auxiliary `dependabot_updates` branch, which can then be
# merged into `main` once the tests pass. The `dependabot_updates` branch must then be reset to the same HEAD as `main` for future updates.

name: CI - Activate auto-merging for Dependabot PRs and reset the base branch after merge

on:
  pull_request_target:
    branches:
      - dependabot_updates

jobs:
  update-dependabot-branch:
    name: Activate auto-merge into `dependabot_updates`
    if: github.repository_owner == 'the-grey-group' && startsWith(github.event.pull_request.head.ref, 'dependabot/') && github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Activate auto-merge
        run: |
          PR_ID="$(gh api graphql -F owner='{owner}' -F name='{repo}' -f query='query($owner: String!, $name: String!) {repository(owner: $owner, name: $name) {pullRequest(number: ${{ github.event.pull_request.number }}) {id}}}' --jq '.data.repository.pullRequest.id')"
          gh api graphql -f pr_id="$PR_ID" -f query='mutation($pr_id: ID!) {enablePullRequestAutoMerge(input:{mergeMethod:SQUASH,pullRequestId:$pr_id }) {pullRequest {number}}}'
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
