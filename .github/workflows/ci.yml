name: CI tests
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    name: Run linters and other pre-commit hooks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up Python 3.9
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install flake8 pre-commit

      - name: Check for syntax errors with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source

      - name: Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  pytest:
    name: Run Python unit tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest compatible versions of immediate dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install pipenv
          pipenv install --dev

      - name: Run all tests
        run: |
          pipenv run pytest -rs -vvv --cov-report=term --cov-report=xml --cov ./pydatalab/pydatalab pydatalab/tests

      - name: Upload coverage to Codecov
        if: matrix.python-version == 3.8 && github.repository == 'the-grey-group/datalabvue'
        uses: codecov/codecov-action@v2.0.2

  webapp:
    name: Test the webapp
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install web app
        working-directory: ./webapp
        run: npm install

      - name: Lint web app
        working-directory: ./webapp
        run: npm run lint

      - name: Build web app
        working-directory: ./webapp
        run: npm run build

  server:
    name: Test the server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up Python 3.9
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9

      - name: Build the Docker images
        run: docker-compose build

      - name: Start Docker images
        run: |
          docker-compose up --abort-on-container-exit &
          # If there are no build errors after 1 minute, then exit successfully.
          # In future, some additional tests will run here instead.
          sleep 60
          exit 0
