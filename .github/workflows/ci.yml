name: CI tests
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    name: Run linters and other pre-commit hooks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install flake8 pre-commit

      - name: Check for syntax errors with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source

      - name: Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  pytest:
    name: Run Python unit tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest compatible versions of immediate dependencies
        working-directory: ./pydatalab
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install pipenv
          pipenv install --dev
          pipenv run pip install -e .

      - name: Run all tests
        working-directory: ./pydatalab
        run: |
          pipenv run pytest -rs -vvv --cov-report=term --cov-report=xml --cov ./pydatalab ./tests

      - name: Upload coverage to Codecov
        if: matrix.python-version == 3.8 && github.repository == 'the-grey-group/datalabvue'
        uses: codecov/codecov-action@v2

  webapp:
    name: Test the webapp
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "15.14"

      - name: Install web app
        working-directory: ./webapp
        run: yarn install

      - name: Unit and Component test web app
        working-directory: ./webapp
        run: yarn test:unit

      - name: Build web app
        working-directory: ./webapp
        run: yarn build

      - name: Build the Docker app image
        run: docker-compose build app

      - name: Build the Docker server image
        run: docker-compose build api

      - name: Build the Docker mongo image
        run: docker-compose build mongo

      - name: Start Docker images
        run: |
          docker-compose up --abort-on-container-exit &
          sleep 60
          exit 0

      - name: Run end-to-end tests
        working-directory: ./webapp
        run: yarn test:e2e  --headless --url http://localhost:8081
